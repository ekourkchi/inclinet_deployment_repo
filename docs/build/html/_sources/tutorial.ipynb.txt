{
 "cells": [
  {
   "cell_type": "code",
   "execution_count": 1,
   "metadata": {
    "nbsphinx": "hidden"
   },
   "outputs": [],
   "source": [
    "## this cell is hidden in sphinx (see the cell metadata)\n",
    "import expectexception"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "# `inlinet` API tutorial\n",
    "\n",
    "## Interactive Version\n",
    "Launch Binder for an interactive version of this tutorial!\n",
    "\n",
    "[![Binder](https://mybinder.org/badge_logo.svg)](https://mybinder.org/v2/gh/quatrope/pycf3/HEAD?filepath=docs%2Fsource%2Ftutorial.ipynb)\n",
    "\n",
    "## Introduction\n",
    "\n",
    "This tutorial is a guide on how to interact with the two Cosmicflows-3 Distance-Velocity Calculators in a Python code. These calculators are featured in [Kourkchi et al. 2020, AJ, 159, 67](https://ui.adsabs.harvard.edu/abs/2020AJ....159...67K/abstract).\n",
    "\n",
    "\n",
    "`pycf3` present an [OO](https://en.wikipedia.org/wiki/Object-oriented_programming) API to access the same capabilities of http://edd.ifa.hawaii.edu/NAMcalculator/  and http://edd.ifa.hawaii.edu/CF3calculator/ .\n",
    "Please be gentle with the server.\n",
    "\n",
    "The first required step is to import the project"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 2,
   "metadata": {},
   "outputs": [],
   "source": [
    "import pycf3"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "## Example 1:  Sending a request to the NAM D-V calcualtor \n",
    "\n",
    "First, let's create the **NAM Client**"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 3,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "NAM(calculator='NAM', cache_dir='/home/ehsan/pycf3_data/_cache_', cache_expire=None)"
      ]
     },
     "execution_count": 3,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "nam = pycf3.NAM()\n",
    "nam"
   ]
  },
  {
   "attachments": {
    "60e6e454-cb61-4c55-b1c0-0de939fe0323.png": {
     "image/png": ""
    }
   },
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "Then the basic functionality of the NAM are provided in two different methods\n",
    "\n",
    "- `calculate_distance(velocity, <coordinates>)` to calculate a **distance** based on a given *velocity*.\n",
    "- `calculate_velocity(distance, <coordinates>)` to calculate a **velocity** based on a given *distance*.\n",
    "\n",
    "The `<coordinates>` parameters can be expressed in `ra, dec` (equatorial), `glon, glat` (galactic) or \n",
    "`sgl, sgb` (supergalactic) coordinates. You need to provide both components of a coordinate. Please note that multiple coordinate systems cannot be mixed.\n",
    "\n",
    "\n",
    "Now, let's assume we want to generate the same query as it appears in the following Figure\n",
    "\n",
    "![image2.png](attachment:60e6e454-cb61-4c55-b1c0-0de939fe0323.png)\n",
    "\n",
    "Here is how to send the same request in a Python code:"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 4,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "\n",
       "<div class=\"result-container\" id=\"result-140077076932304rr56\">\n",
       "    <div class=\"result-css\">\n",
       "        <style>\n",
       "            .observed {\n",
       "                color: #dc3545! important;\n",
       "            }\n",
       "\n",
       "            .adjusted {\n",
       "                color: #28a745!important;\n",
       "            }\n",
       "\n",
       "\n",
       "            tablr.result-table, div.result-raw {\n",
       "                width: 100%;\n",
       "            }\n",
       "\n",
       "            table.result-table tr{\n",
       "                 pointer-events: none;\n",
       "                 background-color: inherit !important;\n",
       "            }\n",
       "\n",
       "            .result-container code{\n",
       "                color: #e83e8c;\n",
       "                background-color: inherit !important;\n",
       "            }\n",
       "\n",
       "            .result-container .hidden {\n",
       "                display: none;\n",
       "            }\n",
       "\n",
       "            div.result-raw {\n",
       "                background-color: #333 !important;\n",
       "            }\n",
       "        </style>\n",
       "    </div>\n",
       "    <div class=\"result-container container-fluid\">\n",
       "        <table class=\"result-table\">\n",
       "            <thead>\n",
       "                <th colspan=3>\n",
       "                    Result - <small><code>NAM(velocity=1000, sgl=102, sgb=-2)</code></small>\n",
       "                </th>\n",
       "            </thead>\n",
       "            <tbody>\n",
       "                <tr>\n",
       "                    <th rowspan=2 class=\"observed\">Observed</th>\n",
       "                    <td>Distance (Mpc)</td>\n",
       "                    <td>\n",
       "                        [ 8.08088613 18.78629089 22.09785028]\n",
       "                    </td>\n",
       "                </tr>\n",
       "                <tr>\n",
       "                    <td>Velocity (Km/s)</td>\n",
       "                    <td>\n",
       "                        1000.0\n",
       "                    </td>\n",
       "                </tr>\n",
       "                \n",
       "            </tbody>\n",
       "        </table>\n",
       "        <div class=\"\">\n",
       "            <a onclick=\"return showRaw140077076932304rr56();\" href=\"#\">\n",
       "                Show/Hide Raw\n",
       "            </a>\n",
       "            <div class=\"result-raw\">\n",
       "                <code id=\"result-code-140077076932304rr56\" class=\"hidden\">\n",
       "{\n",
       "  \"message\": \"Success\",\n",
       "  \"RA\": 187.7891703346409,\n",
       "  \"Dec\": 13.333860121247609,\n",
       "  \"Glon\": 282.9654677357161,\n",
       "  \"Glat\": 75.4136002414933,\n",
       "  \"SGL\": 102.0,\n",
       "  \"SGB\": -2.0,\n",
       "  \"velocity\": 1000.0,\n",
       "  \"distance\": [\n",
       "    8.08088612690689,\n",
       "    18.786290885088945,\n",
       "    22.097850275812398\n",
       "  ]\n",
       "}\n",
       "                </code>\n",
       "            </div>\n",
       "        </div>\n",
       "    </div>\n",
       "    <div class=\"result-js\">\n",
       "        <script>\n",
       "            function showRaw140077076932304rr56(){\n",
       "                var showed = document.getElementById(\n",
       "                    \"result-code-140077076932304rr56\"\n",
       "                ).classList.toggle(\"hidden\");\n",
       "                return false;\n",
       "            }\n",
       "        </script>\n",
       "    </div>\n",
       "</div>"
      ],
      "text/plain": [
       "Result - NAM(velocity=1000, sgl=102, sgb=-2)\n",
       "+----------+-----------------+---------------------------------------+\n",
       "| Observed | Distance (Mpc)  | [ 8.08088613 18.78629089 22.09785028] |\n",
       "|          | Velocity (Km/s) | 1000.0                                |\n",
       "+----------+-----------------+---------------------------------------+"
      ]
     },
     "execution_count": 4,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "result = nam.calculate_distance(velocity=1000, sgl=102, sgb=-2)\n",
    "result"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "> Note: You can click `Show/Hide Raw` to check the raw response from the server\n",
    "\n",
    "The provided coordinates at different coordinate systems can be extracted as follows"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 5,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "CalculatedAt(ra=187.7891703346409, dec=13.333860121247609, glon=282.9654677357161, glat=75.4136002414933, sgl=102.0, sgb=-2.0)"
      ]
     },
     "execution_count": 5,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "result.calculated_at_"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "and the corresponding **distance/velocity** values are available at:"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 6,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "1000.0"
      ]
     },
     "execution_count": 6,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "result.observed_velocity_"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 7,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "array([ 8.08088613, 18.78629089, 22.09785028])"
      ]
     },
     "execution_count": 7,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "result.observed_distance_"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "In addition, the entire raw response, as it is returned by the **EDD** server, are packaged in the `json_` attribute in the form of a Python dictionary"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 8,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "{'message': 'Success',\n",
       " 'RA': 187.7891703346409,\n",
       " 'Dec': 13.333860121247609,\n",
       " 'Glon': 282.9654677357161,\n",
       " 'Glat': 75.4136002414933,\n",
       " 'SGL': 102.0,\n",
       " 'SGB': -2.0,\n",
       " 'velocity': 1000.0,\n",
       " 'distance': [8.08088612690689, 18.786290885088945, 22.097850275812398]}"
      ]
     },
     "execution_count": 8,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "result.json_"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "## Example 2: How to extract the radial velocity of an object at a given distance in NAM"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 9,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "\n",
       "<div class=\"result-container\" id=\"result-140077077429792rr73\">\n",
       "    <div class=\"result-css\">\n",
       "        <style>\n",
       "            .observed {\n",
       "                color: #dc3545! important;\n",
       "            }\n",
       "\n",
       "            .adjusted {\n",
       "                color: #28a745!important;\n",
       "            }\n",
       "\n",
       "\n",
       "            tablr.result-table, div.result-raw {\n",
       "                width: 100%;\n",
       "            }\n",
       "\n",
       "            table.result-table tr{\n",
       "                 pointer-events: none;\n",
       "                 background-color: inherit !important;\n",
       "            }\n",
       "\n",
       "            .result-container code{\n",
       "                color: #e83e8c;\n",
       "                background-color: inherit !important;\n",
       "            }\n",
       "\n",
       "            .result-container .hidden {\n",
       "                display: none;\n",
       "            }\n",
       "\n",
       "            div.result-raw {\n",
       "                background-color: #333 !important;\n",
       "            }\n",
       "        </style>\n",
       "    </div>\n",
       "    <div class=\"result-container container-fluid\">\n",
       "        <table class=\"result-table\">\n",
       "            <thead>\n",
       "                <th colspan=3>\n",
       "                    Result - <small><code>NAM(distance=30, sgl=102, sgb=-2)</code></small>\n",
       "                </th>\n",
       "            </thead>\n",
       "            <tbody>\n",
       "                <tr>\n",
       "                    <th rowspan=2 class=\"observed\">Observed</th>\n",
       "                    <td>Distance (Mpc)</td>\n",
       "                    <td>\n",
       "                        [30.]\n",
       "                    </td>\n",
       "                </tr>\n",
       "                <tr>\n",
       "                    <td>Velocity (Km/s)</td>\n",
       "                    <td>\n",
       "                        1790.9019256321444\n",
       "                    </td>\n",
       "                </tr>\n",
       "                \n",
       "            </tbody>\n",
       "        </table>\n",
       "        <div class=\"\">\n",
       "            <a onclick=\"return showRaw140077077429792rr73();\" href=\"#\">\n",
       "                Show/Hide Raw\n",
       "            </a>\n",
       "            <div class=\"result-raw\">\n",
       "                <code id=\"result-code-140077077429792rr73\" class=\"hidden\">\n",
       "{\n",
       "  \"message\": \"Success\",\n",
       "  \"RA\": 187.7891703346409,\n",
       "  \"Dec\": 13.333860121247609,\n",
       "  \"Glon\": 282.9654677357161,\n",
       "  \"Glat\": 75.4136002414933,\n",
       "  \"SGL\": 102.0,\n",
       "  \"SGB\": -2.0,\n",
       "  \"velocity\": 1790.9019256321444,\n",
       "  \"distance\": [\n",
       "    30.0\n",
       "  ]\n",
       "}\n",
       "                </code>\n",
       "            </div>\n",
       "        </div>\n",
       "    </div>\n",
       "    <div class=\"result-js\">\n",
       "        <script>\n",
       "            function showRaw140077077429792rr73(){\n",
       "                var showed = document.getElementById(\n",
       "                    \"result-code-140077077429792rr73\"\n",
       "                ).classList.toggle(\"hidden\");\n",
       "                return false;\n",
       "            }\n",
       "        </script>\n",
       "    </div>\n",
       "</div>"
      ],
      "text/plain": [
       "Result - NAM(distance=30, sgl=102, sgb=-2)\n",
       "+----------+-----------------+--------------------+\n",
       "| Observed | Distance (Mpc)  | [30.]              |\n",
       "|          | Velocity (Km/s) | 1790.9019256321444 |\n",
       "+----------+-----------------+--------------------+"
      ]
     },
     "execution_count": 9,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "nam.calculate_velocity(distance=30, sgl=102, sgb=-2)"
   ]
  },
  {
   "attachments": {
    "d4310d55-4205-40c1-baaf-daa37fcaced6.png": {
     "image/png": ""
    }
   },
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "## Example 3: Sending a request to the Cosmicflows-3 D-V calculator (d < 200 Mpc)\n",
    "\n",
    "We are trying to reproduce this query in Python\n",
    "\n",
    "![image3.png](attachment:d4310d55-4205-40c1-baaf-daa37fcaced6.png)\n",
    "\n",
    "As stated before, first we need to create a **Cosmic Flows-3 Client**"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 10,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "CF3(calculator='CF3', cache_dir='/home/ehsan/pycf3_data/_cache_', cache_expire=None)"
      ]
     },
     "execution_count": 10,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "cf3 = pycf3.CF3()\n",
    "cf3"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "Let's calculate the distance"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 11,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "\n",
       "<div class=\"result-container\" id=\"result-140076271445952rr3\">\n",
       "    <div class=\"result-css\">\n",
       "        <style>\n",
       "            .observed {\n",
       "                color: #dc3545! important;\n",
       "            }\n",
       "\n",
       "            .adjusted {\n",
       "                color: #28a745!important;\n",
       "            }\n",
       "\n",
       "\n",
       "            tablr.result-table, div.result-raw {\n",
       "                width: 100%;\n",
       "            }\n",
       "\n",
       "            table.result-table tr{\n",
       "                 pointer-events: none;\n",
       "                 background-color: inherit !important;\n",
       "            }\n",
       "\n",
       "            .result-container code{\n",
       "                color: #e83e8c;\n",
       "                background-color: inherit !important;\n",
       "            }\n",
       "\n",
       "            .result-container .hidden {\n",
       "                display: none;\n",
       "            }\n",
       "\n",
       "            div.result-raw {\n",
       "                background-color: #333 !important;\n",
       "            }\n",
       "        </style>\n",
       "    </div>\n",
       "    <div class=\"result-container container-fluid\">\n",
       "        <table class=\"result-table\">\n",
       "            <thead>\n",
       "                <th colspan=3>\n",
       "                    Result - <small><code>CF3(velocity=9000, glon=283, glat=75)</code></small>\n",
       "                </th>\n",
       "            </thead>\n",
       "            <tbody>\n",
       "                <tr>\n",
       "                    <th rowspan=2 class=\"observed\">Observed</th>\n",
       "                    <td>Distance (Mpc)</td>\n",
       "                    <td>\n",
       "                        [136.90134347]\n",
       "                    </td>\n",
       "                </tr>\n",
       "                <tr>\n",
       "                    <td>Velocity (Km/s)</td>\n",
       "                    <td>\n",
       "                        9000.0\n",
       "                    </td>\n",
       "                </tr>\n",
       "                \n",
       "                <tr>\n",
       "                    <th rowspan=2 class=\"adjusted\">Adjusted</th>\n",
       "                    <td>Distance (Mpc)</td>\n",
       "                    <td>\n",
       "                        [134.26214472]\n",
       "                    </td>\n",
       "                </tr>\n",
       "                <tr>\n",
       "                    <td>Velocity (Km/s)</td>\n",
       "                    <td>\n",
       "                        9000.0\n",
       "                    </td>\n",
       "                </tr>\n",
       "                \n",
       "            </tbody>\n",
       "        </table>\n",
       "        <div class=\"\">\n",
       "            <a onclick=\"return showRaw140076271445952rr3();\" href=\"#\">\n",
       "                Show/Hide Raw\n",
       "            </a>\n",
       "            <div class=\"result-raw\">\n",
       "                <code id=\"result-code-140076271445952rr3\" class=\"hidden\">\n",
       "{\n",
       "  \"message\": \"Success\",\n",
       "  \"RA\": 187.66534187250852,\n",
       "  \"Dec\": 12.938131149621988,\n",
       "  \"Glon\": 283.0,\n",
       "  \"Glat\": 75.0,\n",
       "  \"SGL\": 102.34474779489476,\n",
       "  \"SGB\": -2.229027957763543,\n",
       "  \"observed\": {\n",
       "    \"velocity\": 9000.0,\n",
       "    \"distance\": [\n",
       "      136.90134347390065\n",
       "    ]\n",
       "  },\n",
       "  \"adjusted\": {\n",
       "    \"velocity\": 9000.0,\n",
       "    \"distance\": [\n",
       "      134.26214472224996\n",
       "    ]\n",
       "  }\n",
       "}\n",
       "                </code>\n",
       "            </div>\n",
       "        </div>\n",
       "    </div>\n",
       "    <div class=\"result-js\">\n",
       "        <script>\n",
       "            function showRaw140076271445952rr3(){\n",
       "                var showed = document.getElementById(\n",
       "                    \"result-code-140076271445952rr3\"\n",
       "                ).classList.toggle(\"hidden\");\n",
       "                return false;\n",
       "            }\n",
       "        </script>\n",
       "    </div>\n",
       "</div>"
      ],
      "text/plain": [
       "Result - CF3(velocity=9000, glon=283, glat=75)\n",
       "+----------+-----------------+----------------+\n",
       "| Observed | Distance (Mpc)  | [136.90134347] |\n",
       "|          | Velocity (Km/s) | 9000.0         |\n",
       "+----------+-----------------+----------------+\n",
       "| Adjusted | Distance (Mpc)  | [134.26214472] |\n",
       "|          | Velocity (Km/s) | 9000.0         |\n",
       "+----------+-----------------+----------------+"
      ]
     },
     "execution_count": 11,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "result = cf3.calculate_distance(velocity=9000, glon=283, glat=75)\n",
    "result"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "Similar to NAM, **coordinates** can be accessed with `result.calculated_at_` and **velocity/distance** with `result.observed_velocity_` and `result.observed_distance_` respectively.\n",
    "\n",
    "In addition, CF3 provides an adjusted version of the **velocity/distance**, that are available in `result.adjusted_distance_` and `result.adjusted_velocity_` . For further details on the adjustments you can visit [Here](http://edd.ifa.hawaii.edu/CF3calculator/)."
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 12,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "array([134.26214472])"
      ]
     },
     "execution_count": 12,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "result.adjusted_distance_"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 13,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "9000.0"
      ]
     },
     "execution_count": 13,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "result.adjusted_velocity_"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "> Note: The NAM client also has the *adjusted_* values but all are `None`."
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "## Example 4: How to obtain the radial velocity at a given distance with CF3 "
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 14,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "\n",
       "<div class=\"result-container\" id=\"result-140076271073264rr05\">\n",
       "    <div class=\"result-css\">\n",
       "        <style>\n",
       "            .observed {\n",
       "                color: #dc3545! important;\n",
       "            }\n",
       "\n",
       "            .adjusted {\n",
       "                color: #28a745!important;\n",
       "            }\n",
       "\n",
       "\n",
       "            tablr.result-table, div.result-raw {\n",
       "                width: 100%;\n",
       "            }\n",
       "\n",
       "            table.result-table tr{\n",
       "                 pointer-events: none;\n",
       "                 background-color: inherit !important;\n",
       "            }\n",
       "\n",
       "            .result-container code{\n",
       "                color: #e83e8c;\n",
       "                background-color: inherit !important;\n",
       "            }\n",
       "\n",
       "            .result-container .hidden {\n",
       "                display: none;\n",
       "            }\n",
       "\n",
       "            div.result-raw {\n",
       "                background-color: #333 !important;\n",
       "            }\n",
       "        </style>\n",
       "    </div>\n",
       "    <div class=\"result-container container-fluid\">\n",
       "        <table class=\"result-table\">\n",
       "            <thead>\n",
       "                <th colspan=3>\n",
       "                    Result - <small><code>CF3(distance=180, ra=187, dec=13)</code></small>\n",
       "                </th>\n",
       "            </thead>\n",
       "            <tbody>\n",
       "                <tr>\n",
       "                    <th rowspan=2 class=\"observed\">Observed</th>\n",
       "                    <td>Distance (Mpc)</td>\n",
       "                    <td>\n",
       "                        [180.]\n",
       "                    </td>\n",
       "                </tr>\n",
       "                <tr>\n",
       "                    <td>Velocity (Km/s)</td>\n",
       "                    <td>\n",
       "                        12515.699706446017\n",
       "                    </td>\n",
       "                </tr>\n",
       "                \n",
       "                <tr>\n",
       "                    <th rowspan=2 class=\"adjusted\">Adjusted</th>\n",
       "                    <td>Distance (Mpc)</td>\n",
       "                    <td>\n",
       "                        [180.]\n",
       "                    </td>\n",
       "                </tr>\n",
       "                <tr>\n",
       "                    <td>Velocity (Km/s)</td>\n",
       "                    <td>\n",
       "                        12940.58481990226\n",
       "                    </td>\n",
       "                </tr>\n",
       "                \n",
       "            </tbody>\n",
       "        </table>\n",
       "        <div class=\"\">\n",
       "            <a onclick=\"return showRaw140076271073264rr05();\" href=\"#\">\n",
       "                Show/Hide Raw\n",
       "            </a>\n",
       "            <div class=\"result-raw\">\n",
       "                <code id=\"result-code-140076271073264rr05\" class=\"hidden\">\n",
       "{\n",
       "  \"message\": \"Success\",\n",
       "  \"RA\": 186.99999497668534,\n",
       "  \"Dec\": 13.000001835269385,\n",
       "  \"Glon\": 280.56811463100814,\n",
       "  \"Glat\": 74.84475460794316,\n",
       "  \"SGL\": 102.09834270874016,\n",
       "  \"SGB\": -2.8320379440905414,\n",
       "  \"observed\": {\n",
       "    \"velocity\": 12515.699706446017,\n",
       "    \"distance\": [\n",
       "      180.0\n",
       "    ]\n",
       "  },\n",
       "  \"adjusted\": {\n",
       "    \"velocity\": 12940.58481990226,\n",
       "    \"distance\": [\n",
       "      180.0\n",
       "    ]\n",
       "  }\n",
       "}\n",
       "                </code>\n",
       "            </div>\n",
       "        </div>\n",
       "    </div>\n",
       "    <div class=\"result-js\">\n",
       "        <script>\n",
       "            function showRaw140076271073264rr05(){\n",
       "                var showed = document.getElementById(\n",
       "                    \"result-code-140076271073264rr05\"\n",
       "                ).classList.toggle(\"hidden\");\n",
       "                return false;\n",
       "            }\n",
       "        </script>\n",
       "    </div>\n",
       "</div>"
      ],
      "text/plain": [
       "Result - CF3(distance=180, ra=187, dec=13)\n",
       "+----------+-----------------+--------------------+\n",
       "| Observed | Distance (Mpc)  | [180.]             |\n",
       "|          | Velocity (Km/s) | 12515.699706446017 |\n",
       "+----------+-----------------+--------------------+\n",
       "| Adjusted | Distance (Mpc)  | [180.]             |\n",
       "|          | Velocity (Km/s) | 12940.58481990226  |\n",
       "+----------+-----------------+--------------------+"
      ]
     },
     "execution_count": 14,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "cf3.calculate_velocity(distance=180, ra=187, dec=13)"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "----"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "## PyCF3 Cache system\n",
    "\n",
    "By default, any any client instance is created with a cache that prevent to send the same request twice. For example, let's make a similar query twice and measure the calculation time.\n",
    "\n",
    "> Note: We are using the `pycf3.CF3` client as an example, but any other `pycf3` calculator has the same functionalities."
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 15,
   "metadata": {},
   "outputs": [],
   "source": [
    "cf3 = pycf3.CF3()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 16,
   "metadata": {
    "nbsphinx": "hidden"
   },
   "outputs": [
    {
     "data": {
      "text/plain": [
       "4"
      ]
     },
     "execution_count": 16,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "## this cell is hidden in sphinx (see the cell metadata)\n",
    "cf3.cache.clear()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 17,
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "CPU times: user 6.53 ms, sys: 1.02 ms, total: 7.56 ms\n",
      "Wall time: 11.6 s\n"
     ]
    },
    {
     "data": {
      "text/html": [
       "\n",
       "<div class=\"result-container\" id=\"result-140076271220528rr34\">\n",
       "    <div class=\"result-css\">\n",
       "        <style>\n",
       "            .observed {\n",
       "                color: #dc3545! important;\n",
       "            }\n",
       "\n",
       "            .adjusted {\n",
       "                color: #28a745!important;\n",
       "            }\n",
       "\n",
       "\n",
       "            tablr.result-table, div.result-raw {\n",
       "                width: 100%;\n",
       "            }\n",
       "\n",
       "            table.result-table tr{\n",
       "                 pointer-events: none;\n",
       "                 background-color: inherit !important;\n",
       "            }\n",
       "\n",
       "            .result-container code{\n",
       "                color: #e83e8c;\n",
       "                background-color: inherit !important;\n",
       "            }\n",
       "\n",
       "            .result-container .hidden {\n",
       "                display: none;\n",
       "            }\n",
       "\n",
       "            div.result-raw {\n",
       "                background-color: #333 !important;\n",
       "            }\n",
       "        </style>\n",
       "    </div>\n",
       "    <div class=\"result-container container-fluid\">\n",
       "        <table class=\"result-table\">\n",
       "            <thead>\n",
       "                <th colspan=3>\n",
       "                    Result - <small><code>CF3(distance=180, ra=187, dec=13)</code></small>\n",
       "                </th>\n",
       "            </thead>\n",
       "            <tbody>\n",
       "                <tr>\n",
       "                    <th rowspan=2 class=\"observed\">Observed</th>\n",
       "                    <td>Distance (Mpc)</td>\n",
       "                    <td>\n",
       "                        [180.]\n",
       "                    </td>\n",
       "                </tr>\n",
       "                <tr>\n",
       "                    <td>Velocity (Km/s)</td>\n",
       "                    <td>\n",
       "                        12515.699706446017\n",
       "                    </td>\n",
       "                </tr>\n",
       "                \n",
       "                <tr>\n",
       "                    <th rowspan=2 class=\"adjusted\">Adjusted</th>\n",
       "                    <td>Distance (Mpc)</td>\n",
       "                    <td>\n",
       "                        [180.]\n",
       "                    </td>\n",
       "                </tr>\n",
       "                <tr>\n",
       "                    <td>Velocity (Km/s)</td>\n",
       "                    <td>\n",
       "                        12940.58481990226\n",
       "                    </td>\n",
       "                </tr>\n",
       "                \n",
       "            </tbody>\n",
       "        </table>\n",
       "        <div class=\"\">\n",
       "            <a onclick=\"return showRaw140076271220528rr34();\" href=\"#\">\n",
       "                Show/Hide Raw\n",
       "            </a>\n",
       "            <div class=\"result-raw\">\n",
       "                <code id=\"result-code-140076271220528rr34\" class=\"hidden\">\n",
       "{\n",
       "  \"message\": \"Success\",\n",
       "  \"RA\": 186.99999497668534,\n",
       "  \"Dec\": 13.000001835269385,\n",
       "  \"Glon\": 280.56811463100814,\n",
       "  \"Glat\": 74.84475460794316,\n",
       "  \"SGL\": 102.09834270874016,\n",
       "  \"SGB\": -2.8320379440905414,\n",
       "  \"observed\": {\n",
       "    \"velocity\": 12515.699706446017,\n",
       "    \"distance\": [\n",
       "      180.0\n",
       "    ]\n",
       "  },\n",
       "  \"adjusted\": {\n",
       "    \"velocity\": 12940.58481990226,\n",
       "    \"distance\": [\n",
       "      180.0\n",
       "    ]\n",
       "  }\n",
       "}\n",
       "                </code>\n",
       "            </div>\n",
       "        </div>\n",
       "    </div>\n",
       "    <div class=\"result-js\">\n",
       "        <script>\n",
       "            function showRaw140076271220528rr34(){\n",
       "                var showed = document.getElementById(\n",
       "                    \"result-code-140076271220528rr34\"\n",
       "                ).classList.toggle(\"hidden\");\n",
       "                return false;\n",
       "            }\n",
       "        </script>\n",
       "    </div>\n",
       "</div>"
      ],
      "text/plain": [
       "Result - CF3(distance=180, ra=187, dec=13)\n",
       "+----------+-----------------+--------------------+\n",
       "| Observed | Distance (Mpc)  | [180.]             |\n",
       "|          | Velocity (Km/s) | 12515.699706446017 |\n",
       "+----------+-----------------+--------------------+\n",
       "| Adjusted | Distance (Mpc)  | [180.]             |\n",
       "|          | Velocity (Km/s) | 12940.58481990226  |\n",
       "+----------+-----------------+--------------------+"
      ]
     },
     "execution_count": 17,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "%%time\n",
    "cf3.calculate_velocity(distance=180, ra=187, dec=13)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 18,
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "CPU times: user 3.67 ms, sys: 0 ns, total: 3.67 ms\n",
      "Wall time: 2.86 ms\n"
     ]
    },
    {
     "data": {
      "text/html": [
       "\n",
       "<div class=\"result-container\" id=\"result-140076271221920rr27\">\n",
       "    <div class=\"result-css\">\n",
       "        <style>\n",
       "            .observed {\n",
       "                color: #dc3545! important;\n",
       "            }\n",
       "\n",
       "            .adjusted {\n",
       "                color: #28a745!important;\n",
       "            }\n",
       "\n",
       "\n",
       "            tablr.result-table, div.result-raw {\n",
       "                width: 100%;\n",
       "            }\n",
       "\n",
       "            table.result-table tr{\n",
       "                 pointer-events: none;\n",
       "                 background-color: inherit !important;\n",
       "            }\n",
       "\n",
       "            .result-container code{\n",
       "                color: #e83e8c;\n",
       "                background-color: inherit !important;\n",
       "            }\n",
       "\n",
       "            .result-container .hidden {\n",
       "                display: none;\n",
       "            }\n",
       "\n",
       "            div.result-raw {\n",
       "                background-color: #333 !important;\n",
       "            }\n",
       "        </style>\n",
       "    </div>\n",
       "    <div class=\"result-container container-fluid\">\n",
       "        <table class=\"result-table\">\n",
       "            <thead>\n",
       "                <th colspan=3>\n",
       "                    Result - <small><code>CF3(distance=180, ra=187, dec=13)</code></small>\n",
       "                </th>\n",
       "            </thead>\n",
       "            <tbody>\n",
       "                <tr>\n",
       "                    <th rowspan=2 class=\"observed\">Observed</th>\n",
       "                    <td>Distance (Mpc)</td>\n",
       "                    <td>\n",
       "                        [180.]\n",
       "                    </td>\n",
       "                </tr>\n",
       "                <tr>\n",
       "                    <td>Velocity (Km/s)</td>\n",
       "                    <td>\n",
       "                        12515.699706446017\n",
       "                    </td>\n",
       "                </tr>\n",
       "                \n",
       "                <tr>\n",
       "                    <th rowspan=2 class=\"adjusted\">Adjusted</th>\n",
       "                    <td>Distance (Mpc)</td>\n",
       "                    <td>\n",
       "                        [180.]\n",
       "                    </td>\n",
       "                </tr>\n",
       "                <tr>\n",
       "                    <td>Velocity (Km/s)</td>\n",
       "                    <td>\n",
       "                        12940.58481990226\n",
       "                    </td>\n",
       "                </tr>\n",
       "                \n",
       "            </tbody>\n",
       "        </table>\n",
       "        <div class=\"\">\n",
       "            <a onclick=\"return showRaw140076271221920rr27();\" href=\"#\">\n",
       "                Show/Hide Raw\n",
       "            </a>\n",
       "            <div class=\"result-raw\">\n",
       "                <code id=\"result-code-140076271221920rr27\" class=\"hidden\">\n",
       "{\n",
       "  \"message\": \"Success\",\n",
       "  \"RA\": 186.99999497668534,\n",
       "  \"Dec\": 13.000001835269385,\n",
       "  \"Glon\": 280.56811463100814,\n",
       "  \"Glat\": 74.84475460794316,\n",
       "  \"SGL\": 102.09834270874016,\n",
       "  \"SGB\": -2.8320379440905414,\n",
       "  \"observed\": {\n",
       "    \"velocity\": 12515.699706446017,\n",
       "    \"distance\": [\n",
       "      180.0\n",
       "    ]\n",
       "  },\n",
       "  \"adjusted\": {\n",
       "    \"velocity\": 12940.58481990226,\n",
       "    \"distance\": [\n",
       "      180.0\n",
       "    ]\n",
       "  }\n",
       "}\n",
       "                </code>\n",
       "            </div>\n",
       "        </div>\n",
       "    </div>\n",
       "    <div class=\"result-js\">\n",
       "        <script>\n",
       "            function showRaw140076271221920rr27(){\n",
       "                var showed = document.getElementById(\n",
       "                    \"result-code-140076271221920rr27\"\n",
       "                ).classList.toggle(\"hidden\");\n",
       "                return false;\n",
       "            }\n",
       "        </script>\n",
       "    </div>\n",
       "</div>"
      ],
      "text/plain": [
       "Result - CF3(distance=180, ra=187, dec=13)\n",
       "+----------+-----------------+--------------------+\n",
       "| Observed | Distance (Mpc)  | [180.]             |\n",
       "|          | Velocity (Km/s) | 12515.699706446017 |\n",
       "+----------+-----------------+--------------------+\n",
       "| Adjusted | Distance (Mpc)  | [180.]             |\n",
       "|          | Velocity (Km/s) | 12940.58481990226  |\n",
       "+----------+-----------------+--------------------+"
      ]
     },
     "execution_count": 18,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "%%time\n",
    "cf3.calculate_velocity(distance=180, ra=187, dec=13)"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "Evidently, the first time execution lasts for about **10 seconds** while the second time execution is of the order of **ms**. This is achieved by storing the results on the local hard drive in order to avoid the successive execution of similar requests (by default a folder called `pycf3_data`, is created in the user home directory)\n",
    "\n",
    "As expected, if the query is altered by asking for another declination, the process is going to be slow again:"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 19,
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "CPU times: user 3.98 ms, sys: 4.03 ms, total: 8.01 ms\n",
      "Wall time: 12.2 s\n"
     ]
    },
    {
     "data": {
      "text/html": [
       "\n",
       "<div class=\"result-container\" id=\"result-140076271220000rr11\">\n",
       "    <div class=\"result-css\">\n",
       "        <style>\n",
       "            .observed {\n",
       "                color: #dc3545! important;\n",
       "            }\n",
       "\n",
       "            .adjusted {\n",
       "                color: #28a745!important;\n",
       "            }\n",
       "\n",
       "\n",
       "            tablr.result-table, div.result-raw {\n",
       "                width: 100%;\n",
       "            }\n",
       "\n",
       "            table.result-table tr{\n",
       "                 pointer-events: none;\n",
       "                 background-color: inherit !important;\n",
       "            }\n",
       "\n",
       "            .result-container code{\n",
       "                color: #e83e8c;\n",
       "                background-color: inherit !important;\n",
       "            }\n",
       "\n",
       "            .result-container .hidden {\n",
       "                display: none;\n",
       "            }\n",
       "\n",
       "            div.result-raw {\n",
       "                background-color: #333 !important;\n",
       "            }\n",
       "        </style>\n",
       "    </div>\n",
       "    <div class=\"result-container container-fluid\">\n",
       "        <table class=\"result-table\">\n",
       "            <thead>\n",
       "                <th colspan=3>\n",
       "                    Result - <small><code>CF3(distance=180, ra=187, dec=13.5)</code></small>\n",
       "                </th>\n",
       "            </thead>\n",
       "            <tbody>\n",
       "                <tr>\n",
       "                    <th rowspan=2 class=\"observed\">Observed</th>\n",
       "                    <td>Distance (Mpc)</td>\n",
       "                    <td>\n",
       "                        [180.]\n",
       "                    </td>\n",
       "                </tr>\n",
       "                <tr>\n",
       "                    <td>Velocity (Km/s)</td>\n",
       "                    <td>\n",
       "                        12512.725297090401\n",
       "                    </td>\n",
       "                </tr>\n",
       "                \n",
       "                <tr>\n",
       "                    <th rowspan=2 class=\"adjusted\">Adjusted</th>\n",
       "                    <td>Distance (Mpc)</td>\n",
       "                    <td>\n",
       "                        [180.]\n",
       "                    </td>\n",
       "                </tr>\n",
       "                <tr>\n",
       "                    <td>Velocity (Km/s)</td>\n",
       "                    <td>\n",
       "                        12937.406568949371\n",
       "                    </td>\n",
       "                </tr>\n",
       "                \n",
       "            </tbody>\n",
       "        </table>\n",
       "        <div class=\"\">\n",
       "            <a onclick=\"return showRaw140076271220000rr11();\" href=\"#\">\n",
       "                Show/Hide Raw\n",
       "            </a>\n",
       "            <div class=\"result-raw\">\n",
       "                <code id=\"result-code-140076271220000rr11\" class=\"hidden\">\n",
       "{\n",
       "  \"message\": \"Success\",\n",
       "  \"RA\": 186.9999950300572,\n",
       "  \"Dec\": 13.500001835269389,\n",
       "  \"Glon\": 279.88275558287694,\n",
       "  \"Glat\": 75.31258412600853,\n",
       "  \"SGL\": 101.61924751937396,\n",
       "  \"SGB\": -2.687124276261474,\n",
       "  \"observed\": {\n",
       "    \"velocity\": 12512.725297090401,\n",
       "    \"distance\": [\n",
       "      180.0\n",
       "    ]\n",
       "  },\n",
       "  \"adjusted\": {\n",
       "    \"velocity\": 12937.406568949371,\n",
       "    \"distance\": [\n",
       "      180.0\n",
       "    ]\n",
       "  }\n",
       "}\n",
       "                </code>\n",
       "            </div>\n",
       "        </div>\n",
       "    </div>\n",
       "    <div class=\"result-js\">\n",
       "        <script>\n",
       "            function showRaw140076271220000rr11(){\n",
       "                var showed = document.getElementById(\n",
       "                    \"result-code-140076271220000rr11\"\n",
       "                ).classList.toggle(\"hidden\");\n",
       "                return false;\n",
       "            }\n",
       "        </script>\n",
       "    </div>\n",
       "</div>"
      ],
      "text/plain": [
       "Result - CF3(distance=180, ra=187, dec=13.5)\n",
       "+----------+-----------------+--------------------+\n",
       "| Observed | Distance (Mpc)  | [180.]             |\n",
       "|          | Velocity (Km/s) | 12512.725297090401 |\n",
       "+----------+-----------------+--------------------+\n",
       "| Adjusted | Distance (Mpc)  | [180.]             |\n",
       "|          | Velocity (Km/s) | 12937.406568949371 |\n",
       "+----------+-----------------+--------------------+"
      ]
     },
     "execution_count": 19,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "%%time\n",
    "cf3.calculate_velocity(distance=180, ra=187, dec=13.5)"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "and the execution of the same query is fast again"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 20,
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "CPU times: user 1.68 ms, sys: 357 µs, total: 2.04 ms\n",
      "Wall time: 1.37 ms\n"
     ]
    },
    {
     "data": {
      "text/html": [
       "\n",
       "<div class=\"result-container\" id=\"result-140076271203040rr22\">\n",
       "    <div class=\"result-css\">\n",
       "        <style>\n",
       "            .observed {\n",
       "                color: #dc3545! important;\n",
       "            }\n",
       "\n",
       "            .adjusted {\n",
       "                color: #28a745!important;\n",
       "            }\n",
       "\n",
       "\n",
       "            tablr.result-table, div.result-raw {\n",
       "                width: 100%;\n",
       "            }\n",
       "\n",
       "            table.result-table tr{\n",
       "                 pointer-events: none;\n",
       "                 background-color: inherit !important;\n",
       "            }\n",
       "\n",
       "            .result-container code{\n",
       "                color: #e83e8c;\n",
       "                background-color: inherit !important;\n",
       "            }\n",
       "\n",
       "            .result-container .hidden {\n",
       "                display: none;\n",
       "            }\n",
       "\n",
       "            div.result-raw {\n",
       "                background-color: #333 !important;\n",
       "            }\n",
       "        </style>\n",
       "    </div>\n",
       "    <div class=\"result-container container-fluid\">\n",
       "        <table class=\"result-table\">\n",
       "            <thead>\n",
       "                <th colspan=3>\n",
       "                    Result - <small><code>CF3(distance=180, ra=187, dec=13.5)</code></small>\n",
       "                </th>\n",
       "            </thead>\n",
       "            <tbody>\n",
       "                <tr>\n",
       "                    <th rowspan=2 class=\"observed\">Observed</th>\n",
       "                    <td>Distance (Mpc)</td>\n",
       "                    <td>\n",
       "                        [180.]\n",
       "                    </td>\n",
       "                </tr>\n",
       "                <tr>\n",
       "                    <td>Velocity (Km/s)</td>\n",
       "                    <td>\n",
       "                        12512.725297090401\n",
       "                    </td>\n",
       "                </tr>\n",
       "                \n",
       "                <tr>\n",
       "                    <th rowspan=2 class=\"adjusted\">Adjusted</th>\n",
       "                    <td>Distance (Mpc)</td>\n",
       "                    <td>\n",
       "                        [180.]\n",
       "                    </td>\n",
       "                </tr>\n",
       "                <tr>\n",
       "                    <td>Velocity (Km/s)</td>\n",
       "                    <td>\n",
       "                        12937.406568949371\n",
       "                    </td>\n",
       "                </tr>\n",
       "                \n",
       "            </tbody>\n",
       "        </table>\n",
       "        <div class=\"\">\n",
       "            <a onclick=\"return showRaw140076271203040rr22();\" href=\"#\">\n",
       "                Show/Hide Raw\n",
       "            </a>\n",
       "            <div class=\"result-raw\">\n",
       "                <code id=\"result-code-140076271203040rr22\" class=\"hidden\">\n",
       "{\n",
       "  \"message\": \"Success\",\n",
       "  \"RA\": 186.9999950300572,\n",
       "  \"Dec\": 13.500001835269389,\n",
       "  \"Glon\": 279.88275558287694,\n",
       "  \"Glat\": 75.31258412600853,\n",
       "  \"SGL\": 101.61924751937396,\n",
       "  \"SGB\": -2.687124276261474,\n",
       "  \"observed\": {\n",
       "    \"velocity\": 12512.725297090401,\n",
       "    \"distance\": [\n",
       "      180.0\n",
       "    ]\n",
       "  },\n",
       "  \"adjusted\": {\n",
       "    \"velocity\": 12937.406568949371,\n",
       "    \"distance\": [\n",
       "      180.0\n",
       "    ]\n",
       "  }\n",
       "}\n",
       "                </code>\n",
       "            </div>\n",
       "        </div>\n",
       "    </div>\n",
       "    <div class=\"result-js\">\n",
       "        <script>\n",
       "            function showRaw140076271203040rr22(){\n",
       "                var showed = document.getElementById(\n",
       "                    \"result-code-140076271203040rr22\"\n",
       "                ).classList.toggle(\"hidden\");\n",
       "                return false;\n",
       "            }\n",
       "        </script>\n",
       "    </div>\n",
       "</div>"
      ],
      "text/plain": [
       "Result - CF3(distance=180, ra=187, dec=13.5)\n",
       "+----------+-----------------+--------------------+\n",
       "| Observed | Distance (Mpc)  | [180.]             |\n",
       "|          | Velocity (Km/s) | 12512.725297090401 |\n",
       "+----------+-----------------+--------------------+\n",
       "| Adjusted | Distance (Mpc)  | [180.]             |\n",
       "|          | Velocity (Km/s) | 12937.406568949371 |\n",
       "+----------+-----------------+--------------------+"
      ]
     },
     "execution_count": 20,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "%%time\n",
    "cf3.calculate_velocity(distance=180, ra=187, dec=13.5)"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "In addition, it is beneficial to recycle the results that are not \"too older\" than an expiration time. In these cases, you can set how many second your local data will be available by adding the parameter `cache_expire` when you create the *CF3* client."
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 21,
   "metadata": {},
   "outputs": [],
   "source": [
    "cf3 = pycf3.CF3(cache_expire=2)"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "At this point the new cf3 instance shares the same default-cache of the previous one. Now, if we execute any of the previous requests, the process would be fast. As seen, it's only taking a few milliseconds."
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 22,
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "CPU times: user 2.19 ms, sys: 0 ns, total: 2.19 ms\n",
      "Wall time: 1.65 ms\n"
     ]
    },
    {
     "data": {
      "text/html": [
       "\n",
       "<div class=\"result-container\" id=\"result-140077076959440rr67\">\n",
       "    <div class=\"result-css\">\n",
       "        <style>\n",
       "            .observed {\n",
       "                color: #dc3545! important;\n",
       "            }\n",
       "\n",
       "            .adjusted {\n",
       "                color: #28a745!important;\n",
       "            }\n",
       "\n",
       "\n",
       "            tablr.result-table, div.result-raw {\n",
       "                width: 100%;\n",
       "            }\n",
       "\n",
       "            table.result-table tr{\n",
       "                 pointer-events: none;\n",
       "                 background-color: inherit !important;\n",
       "            }\n",
       "\n",
       "            .result-container code{\n",
       "                color: #e83e8c;\n",
       "                background-color: inherit !important;\n",
       "            }\n",
       "\n",
       "            .result-container .hidden {\n",
       "                display: none;\n",
       "            }\n",
       "\n",
       "            div.result-raw {\n",
       "                background-color: #333 !important;\n",
       "            }\n",
       "        </style>\n",
       "    </div>\n",
       "    <div class=\"result-container container-fluid\">\n",
       "        <table class=\"result-table\">\n",
       "            <thead>\n",
       "                <th colspan=3>\n",
       "                    Result - <small><code>CF3(distance=180, ra=187, dec=13)</code></small>\n",
       "                </th>\n",
       "            </thead>\n",
       "            <tbody>\n",
       "                <tr>\n",
       "                    <th rowspan=2 class=\"observed\">Observed</th>\n",
       "                    <td>Distance (Mpc)</td>\n",
       "                    <td>\n",
       "                        [180.]\n",
       "                    </td>\n",
       "                </tr>\n",
       "                <tr>\n",
       "                    <td>Velocity (Km/s)</td>\n",
       "                    <td>\n",
       "                        12515.699706446017\n",
       "                    </td>\n",
       "                </tr>\n",
       "                \n",
       "                <tr>\n",
       "                    <th rowspan=2 class=\"adjusted\">Adjusted</th>\n",
       "                    <td>Distance (Mpc)</td>\n",
       "                    <td>\n",
       "                        [180.]\n",
       "                    </td>\n",
       "                </tr>\n",
       "                <tr>\n",
       "                    <td>Velocity (Km/s)</td>\n",
       "                    <td>\n",
       "                        12940.58481990226\n",
       "                    </td>\n",
       "                </tr>\n",
       "                \n",
       "            </tbody>\n",
       "        </table>\n",
       "        <div class=\"\">\n",
       "            <a onclick=\"return showRaw140077076959440rr67();\" href=\"#\">\n",
       "                Show/Hide Raw\n",
       "            </a>\n",
       "            <div class=\"result-raw\">\n",
       "                <code id=\"result-code-140077076959440rr67\" class=\"hidden\">\n",
       "{\n",
       "  \"message\": \"Success\",\n",
       "  \"RA\": 186.99999497668534,\n",
       "  \"Dec\": 13.000001835269385,\n",
       "  \"Glon\": 280.56811463100814,\n",
       "  \"Glat\": 74.84475460794316,\n",
       "  \"SGL\": 102.09834270874016,\n",
       "  \"SGB\": -2.8320379440905414,\n",
       "  \"observed\": {\n",
       "    \"velocity\": 12515.699706446017,\n",
       "    \"distance\": [\n",
       "      180.0\n",
       "    ]\n",
       "  },\n",
       "  \"adjusted\": {\n",
       "    \"velocity\": 12940.58481990226,\n",
       "    \"distance\": [\n",
       "      180.0\n",
       "    ]\n",
       "  }\n",
       "}\n",
       "                </code>\n",
       "            </div>\n",
       "        </div>\n",
       "    </div>\n",
       "    <div class=\"result-js\">\n",
       "        <script>\n",
       "            function showRaw140077076959440rr67(){\n",
       "                var showed = document.getElementById(\n",
       "                    \"result-code-140077076959440rr67\"\n",
       "                ).classList.toggle(\"hidden\");\n",
       "                return false;\n",
       "            }\n",
       "        </script>\n",
       "    </div>\n",
       "</div>"
      ],
      "text/plain": [
       "Result - CF3(distance=180, ra=187, dec=13)\n",
       "+----------+-----------------+--------------------+\n",
       "| Observed | Distance (Mpc)  | [180.]             |\n",
       "|          | Velocity (Km/s) | 12515.699706446017 |\n",
       "+----------+-----------------+--------------------+\n",
       "| Adjusted | Distance (Mpc)  | [180.]             |\n",
       "|          | Velocity (Km/s) | 12940.58481990226  |\n",
       "+----------+-----------------+--------------------+"
      ]
     },
     "execution_count": 22,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "%%time\n",
    "cf3.calculate_velocity(distance=180, ra=187, dec=13)"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "Yo can remove the entire \"cached\" data by calling the command"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 23,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "2"
      ]
     },
     "execution_count": 23,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "cf3.cache.clear()"
   ]
  },
  {
   "cell_type": "raw",
   "metadata": {},
   "source": [
    "Now we can send the same original request and the result will be available for 2 seconds before it expires."
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 24,
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "CPU times: user 6.2 ms, sys: 3.32 ms, total: 9.52 ms\n",
      "Wall time: 14.5 s\n"
     ]
    }
   ],
   "source": [
    "%%time\n",
    "cf3.calculate_velocity(distance=180, ra=187, dec=13.5)\n",
    "\n",
    "import time\n",
    "time.sleep(3)  # lets sleep 3 seconds"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "because we waited to long, the next query will be slow again"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 25,
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "CPU times: user 6.5 ms, sys: 5.01 ms, total: 11.5 ms\n",
      "Wall time: 11.7 s\n"
     ]
    },
    {
     "data": {
      "text/html": [
       "\n",
       "<div class=\"result-container\" id=\"result-140076271446192rr66\">\n",
       "    <div class=\"result-css\">\n",
       "        <style>\n",
       "            .observed {\n",
       "                color: #dc3545! important;\n",
       "            }\n",
       "\n",
       "            .adjusted {\n",
       "                color: #28a745!important;\n",
       "            }\n",
       "\n",
       "\n",
       "            tablr.result-table, div.result-raw {\n",
       "                width: 100%;\n",
       "            }\n",
       "\n",
       "            table.result-table tr{\n",
       "                 pointer-events: none;\n",
       "                 background-color: inherit !important;\n",
       "            }\n",
       "\n",
       "            .result-container code{\n",
       "                color: #e83e8c;\n",
       "                background-color: inherit !important;\n",
       "            }\n",
       "\n",
       "            .result-container .hidden {\n",
       "                display: none;\n",
       "            }\n",
       "\n",
       "            div.result-raw {\n",
       "                background-color: #333 !important;\n",
       "            }\n",
       "        </style>\n",
       "    </div>\n",
       "    <div class=\"result-container container-fluid\">\n",
       "        <table class=\"result-table\">\n",
       "            <thead>\n",
       "                <th colspan=3>\n",
       "                    Result - <small><code>CF3(distance=180, ra=187, dec=13.5)</code></small>\n",
       "                </th>\n",
       "            </thead>\n",
       "            <tbody>\n",
       "                <tr>\n",
       "                    <th rowspan=2 class=\"observed\">Observed</th>\n",
       "                    <td>Distance (Mpc)</td>\n",
       "                    <td>\n",
       "                        [180.]\n",
       "                    </td>\n",
       "                </tr>\n",
       "                <tr>\n",
       "                    <td>Velocity (Km/s)</td>\n",
       "                    <td>\n",
       "                        12512.725297090401\n",
       "                    </td>\n",
       "                </tr>\n",
       "                \n",
       "                <tr>\n",
       "                    <th rowspan=2 class=\"adjusted\">Adjusted</th>\n",
       "                    <td>Distance (Mpc)</td>\n",
       "                    <td>\n",
       "                        [180.]\n",
       "                    </td>\n",
       "                </tr>\n",
       "                <tr>\n",
       "                    <td>Velocity (Km/s)</td>\n",
       "                    <td>\n",
       "                        12937.406568949371\n",
       "                    </td>\n",
       "                </tr>\n",
       "                \n",
       "            </tbody>\n",
       "        </table>\n",
       "        <div class=\"\">\n",
       "            <a onclick=\"return showRaw140076271446192rr66();\" href=\"#\">\n",
       "                Show/Hide Raw\n",
       "            </a>\n",
       "            <div class=\"result-raw\">\n",
       "                <code id=\"result-code-140076271446192rr66\" class=\"hidden\">\n",
       "{\n",
       "  \"message\": \"Success\",\n",
       "  \"RA\": 186.9999950300572,\n",
       "  \"Dec\": 13.500001835269389,\n",
       "  \"Glon\": 279.88275558287694,\n",
       "  \"Glat\": 75.31258412600853,\n",
       "  \"SGL\": 101.61924751937396,\n",
       "  \"SGB\": -2.687124276261474,\n",
       "  \"observed\": {\n",
       "    \"velocity\": 12512.725297090401,\n",
       "    \"distance\": [\n",
       "      180.0\n",
       "    ]\n",
       "  },\n",
       "  \"adjusted\": {\n",
       "    \"velocity\": 12937.406568949371,\n",
       "    \"distance\": [\n",
       "      180.0\n",
       "    ]\n",
       "  }\n",
       "}\n",
       "                </code>\n",
       "            </div>\n",
       "        </div>\n",
       "    </div>\n",
       "    <div class=\"result-js\">\n",
       "        <script>\n",
       "            function showRaw140076271446192rr66(){\n",
       "                var showed = document.getElementById(\n",
       "                    \"result-code-140076271446192rr66\"\n",
       "                ).classList.toggle(\"hidden\");\n",
       "                return false;\n",
       "            }\n",
       "        </script>\n",
       "    </div>\n",
       "</div>"
      ],
      "text/plain": [
       "Result - CF3(distance=180, ra=187, dec=13.5)\n",
       "+----------+-----------------+--------------------+\n",
       "| Observed | Distance (Mpc)  | [180.]             |\n",
       "|          | Velocity (Km/s) | 12512.725297090401 |\n",
       "+----------+-----------------+--------------------+\n",
       "| Adjusted | Distance (Mpc)  | [180.]             |\n",
       "|          | Velocity (Km/s) | 12937.406568949371 |\n",
       "+----------+-----------------+--------------------+"
      ]
     },
     "execution_count": 25,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "%%time\n",
    "cf3.calculate_velocity(distance=180, ra=187, dec=13.5)"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "However, if we don't wait until the cached outcomes are expired, the process would be quick."
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 26,
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "CPU times: user 0 ns, sys: 2.3 ms, total: 2.3 ms\n",
      "Wall time: 1.53 ms\n"
     ]
    },
    {
     "data": {
      "text/html": [
       "\n",
       "<div class=\"result-container\" id=\"result-140076271086032rr44\">\n",
       "    <div class=\"result-css\">\n",
       "        <style>\n",
       "            .observed {\n",
       "                color: #dc3545! important;\n",
       "            }\n",
       "\n",
       "            .adjusted {\n",
       "                color: #28a745!important;\n",
       "            }\n",
       "\n",
       "\n",
       "            tablr.result-table, div.result-raw {\n",
       "                width: 100%;\n",
       "            }\n",
       "\n",
       "            table.result-table tr{\n",
       "                 pointer-events: none;\n",
       "                 background-color: inherit !important;\n",
       "            }\n",
       "\n",
       "            .result-container code{\n",
       "                color: #e83e8c;\n",
       "                background-color: inherit !important;\n",
       "            }\n",
       "\n",
       "            .result-container .hidden {\n",
       "                display: none;\n",
       "            }\n",
       "\n",
       "            div.result-raw {\n",
       "                background-color: #333 !important;\n",
       "            }\n",
       "        </style>\n",
       "    </div>\n",
       "    <div class=\"result-container container-fluid\">\n",
       "        <table class=\"result-table\">\n",
       "            <thead>\n",
       "                <th colspan=3>\n",
       "                    Result - <small><code>CF3(distance=180, ra=187, dec=13.5)</code></small>\n",
       "                </th>\n",
       "            </thead>\n",
       "            <tbody>\n",
       "                <tr>\n",
       "                    <th rowspan=2 class=\"observed\">Observed</th>\n",
       "                    <td>Distance (Mpc)</td>\n",
       "                    <td>\n",
       "                        [180.]\n",
       "                    </td>\n",
       "                </tr>\n",
       "                <tr>\n",
       "                    <td>Velocity (Km/s)</td>\n",
       "                    <td>\n",
       "                        12512.725297090401\n",
       "                    </td>\n",
       "                </tr>\n",
       "                \n",
       "                <tr>\n",
       "                    <th rowspan=2 class=\"adjusted\">Adjusted</th>\n",
       "                    <td>Distance (Mpc)</td>\n",
       "                    <td>\n",
       "                        [180.]\n",
       "                    </td>\n",
       "                </tr>\n",
       "                <tr>\n",
       "                    <td>Velocity (Km/s)</td>\n",
       "                    <td>\n",
       "                        12937.406568949371\n",
       "                    </td>\n",
       "                </tr>\n",
       "                \n",
       "            </tbody>\n",
       "        </table>\n",
       "        <div class=\"\">\n",
       "            <a onclick=\"return showRaw140076271086032rr44();\" href=\"#\">\n",
       "                Show/Hide Raw\n",
       "            </a>\n",
       "            <div class=\"result-raw\">\n",
       "                <code id=\"result-code-140076271086032rr44\" class=\"hidden\">\n",
       "{\n",
       "  \"message\": \"Success\",\n",
       "  \"RA\": 186.9999950300572,\n",
       "  \"Dec\": 13.500001835269389,\n",
       "  \"Glon\": 279.88275558287694,\n",
       "  \"Glat\": 75.31258412600853,\n",
       "  \"SGL\": 101.61924751937396,\n",
       "  \"SGB\": -2.687124276261474,\n",
       "  \"observed\": {\n",
       "    \"velocity\": 12512.725297090401,\n",
       "    \"distance\": [\n",
       "      180.0\n",
       "    ]\n",
       "  },\n",
       "  \"adjusted\": {\n",
       "    \"velocity\": 12937.406568949371,\n",
       "    \"distance\": [\n",
       "      180.0\n",
       "    ]\n",
       "  }\n",
       "}\n",
       "                </code>\n",
       "            </div>\n",
       "        </div>\n",
       "    </div>\n",
       "    <div class=\"result-js\">\n",
       "        <script>\n",
       "            function showRaw140076271086032rr44(){\n",
       "                var showed = document.getElementById(\n",
       "                    \"result-code-140076271086032rr44\"\n",
       "                ).classList.toggle(\"hidden\");\n",
       "                return false;\n",
       "            }\n",
       "        </script>\n",
       "    </div>\n",
       "</div>"
      ],
      "text/plain": [
       "Result - CF3(distance=180, ra=187, dec=13.5)\n",
       "+----------+-----------------+--------------------+\n",
       "| Observed | Distance (Mpc)  | [180.]             |\n",
       "|          | Velocity (Km/s) | 12512.725297090401 |\n",
       "+----------+-----------------+--------------------+\n",
       "| Adjusted | Distance (Mpc)  | [180.]             |\n",
       "|          | Velocity (Km/s) | 12937.406568949371 |\n",
       "+----------+-----------------+--------------------+"
      ]
     },
     "execution_count": 26,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "%%time\n",
    "cf3.calculate_velocity(distance=180, ra=187, dec=13.5)"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "### Changing the cache backend"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "The entire cache backend of pycf3 was created with **DiskCache** (http://www.grantjenks.com/docs/diskcache/)\n",
    "\n",
    "You can change your cache location (to store different datasets for example) by providing another `diskcache.Cache` or `diskcache.FanoutCache` instance.\n",
    "\n",
    "```python\n",
    "\n",
    "import diskcache as dcache\n",
    "\n",
    "cache = dcache.FanoutCache(\n",
    "    directory=\"my/cache/directory\")\n",
    "\n",
    "# let make our data valid for 24 hours\n",
    "cf3 = pycf3.CF3(cache=cache, cache_expire=86400)\n",
    "\n",
    "```"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "Finally, to completely deactivate the cache system, pycf3 can be forced to ignore the cache system by setting cache to `NoCache`."
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 27,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "CF3(calculator='CF3', cache_dir='', cache_expire=None)"
      ]
     },
     "execution_count": 27,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "cf3 = pycf3.CF3(cache=pycf3.NoCache())\n",
    "cf3"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "----"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "## PyCF3 Retry\n",
    "\n",
    "By default any calculator instance try **3 times** to perform a request.\n",
    "if you want to customize the number of attempts, you need to change the default `session` of the instance.\n",
    "\n",
    "> Note: We are using the `pycf3.CF3` client as an example, but any other `pycf3` calculator has the same functionalities.\n",
    "\n",
    "For example if you want to try 2 times:"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 28,
   "metadata": {},
   "outputs": [],
   "source": [
    "session = pycf3.RetrySession(retries=2)\n",
    "cf3 = pycf3.CF3(session=session)"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "Also if you want to only wait for some arbitrary number of seconds between any request you can add the `timeout=<SECONDS>` to any search request."
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 29,
   "metadata": {
    "nbsphinx": "hidden"
   },
   "outputs": [
    {
     "data": {
      "text/plain": [
       "1"
      ]
     },
     "execution_count": 29,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "## this cell is hidden in sphinx (see the cell metadata)\n",
    "cf3.cache.clear()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 30,
   "metadata": {},
   "outputs": [
    {
     "ename": "ConnectionError",
     "evalue": "HTTPConnectionPool(host='edd.ifa.hawaii.edu', port=80): Max retries exceeded with url: /CF3calculator/api.php (Caused by ReadTimeoutError(\"HTTPConnectionPool(host='edd.ifa.hawaii.edu', port=80): Read timed out. (read timeout=5)\"))",
     "output_type": "error",
     "traceback": [
      "\u001b[0;31m---------------------------------------------------------------------------\u001b[0m",
      "\u001b[0;31mtimeout\u001b[0m                                   Traceback (most recent call last)",
      "\u001b[0;32m~/anaconda3/lib/python3.8/site-packages/urllib3/connectionpool.py\u001b[0m in \u001b[0;36m_make_request\u001b[0;34m(self, conn, method, url, timeout, chunked, **httplib_request_kw)\u001b[0m\n\u001b[1;32m    425\u001b[0m                     \u001b[0;31m# Otherwise it looks like a bug in the code.\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0;32m--> 426\u001b[0;31m                     \u001b[0msix\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mraise_from\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0me\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0;32mNone\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0m\u001b[1;32m    427\u001b[0m         \u001b[0;32mexcept\u001b[0m \u001b[0;34m(\u001b[0m\u001b[0mSocketTimeout\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0mBaseSSLError\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0mSocketError\u001b[0m\u001b[0;34m)\u001b[0m \u001b[0;32mas\u001b[0m \u001b[0me\u001b[0m\u001b[0;34m:\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n",
      "\u001b[0;32m~/anaconda3/lib/python3.8/site-packages/urllib3/packages/six.py\u001b[0m in \u001b[0;36mraise_from\u001b[0;34m(value, from_value)\u001b[0m\n",
      "\u001b[0;32m~/anaconda3/lib/python3.8/site-packages/urllib3/connectionpool.py\u001b[0m in \u001b[0;36m_make_request\u001b[0;34m(self, conn, method, url, timeout, chunked, **httplib_request_kw)\u001b[0m\n\u001b[1;32m    420\u001b[0m                 \u001b[0;32mtry\u001b[0m\u001b[0;34m:\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0;32m--> 421\u001b[0;31m                     \u001b[0mhttplib_response\u001b[0m \u001b[0;34m=\u001b[0m \u001b[0mconn\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mgetresponse\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0m\u001b[1;32m    422\u001b[0m                 \u001b[0;32mexcept\u001b[0m \u001b[0mBaseException\u001b[0m \u001b[0;32mas\u001b[0m \u001b[0me\u001b[0m\u001b[0;34m:\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n",
      "\u001b[0;32m~/anaconda3/lib/python3.8/http/client.py\u001b[0m in \u001b[0;36mgetresponse\u001b[0;34m(self)\u001b[0m\n\u001b[1;32m   1346\u001b[0m             \u001b[0;32mtry\u001b[0m\u001b[0;34m:\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0;32m-> 1347\u001b[0;31m                 \u001b[0mresponse\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mbegin\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0m\u001b[1;32m   1348\u001b[0m             \u001b[0;32mexcept\u001b[0m \u001b[0mConnectionError\u001b[0m\u001b[0;34m:\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n",
      "\u001b[0;32m~/anaconda3/lib/python3.8/http/client.py\u001b[0m in \u001b[0;36mbegin\u001b[0;34m(self)\u001b[0m\n\u001b[1;32m    306\u001b[0m         \u001b[0;32mwhile\u001b[0m \u001b[0;32mTrue\u001b[0m\u001b[0;34m:\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0;32m--> 307\u001b[0;31m             \u001b[0mversion\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0mstatus\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0mreason\u001b[0m \u001b[0;34m=\u001b[0m \u001b[0mself\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0m_read_status\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0m\u001b[1;32m    308\u001b[0m             \u001b[0;32mif\u001b[0m \u001b[0mstatus\u001b[0m \u001b[0;34m!=\u001b[0m \u001b[0mCONTINUE\u001b[0m\u001b[0;34m:\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n",
      "\u001b[0;32m~/anaconda3/lib/python3.8/http/client.py\u001b[0m in \u001b[0;36m_read_status\u001b[0;34m(self)\u001b[0m\n\u001b[1;32m    267\u001b[0m     \u001b[0;32mdef\u001b[0m \u001b[0m_read_status\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mself\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m:\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0;32m--> 268\u001b[0;31m         \u001b[0mline\u001b[0m \u001b[0;34m=\u001b[0m \u001b[0mstr\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mself\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mfp\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mreadline\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0m_MAXLINE\u001b[0m \u001b[0;34m+\u001b[0m \u001b[0;36m1\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0;34m\"iso-8859-1\"\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0m\u001b[1;32m    269\u001b[0m         \u001b[0;32mif\u001b[0m \u001b[0mlen\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mline\u001b[0m\u001b[0;34m)\u001b[0m \u001b[0;34m>\u001b[0m \u001b[0m_MAXLINE\u001b[0m\u001b[0;34m:\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n",
      "\u001b[0;32m~/anaconda3/lib/python3.8/socket.py\u001b[0m in \u001b[0;36mreadinto\u001b[0;34m(self, b)\u001b[0m\n\u001b[1;32m    668\u001b[0m             \u001b[0;32mtry\u001b[0m\u001b[0;34m:\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0;32m--> 669\u001b[0;31m                 \u001b[0;32mreturn\u001b[0m \u001b[0mself\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0m_sock\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mrecv_into\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mb\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0m\u001b[1;32m    670\u001b[0m             \u001b[0;32mexcept\u001b[0m \u001b[0mtimeout\u001b[0m\u001b[0;34m:\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n",
      "\u001b[0;31mtimeout\u001b[0m: timed out",
      "\nDuring handling of the above exception, another exception occurred:\n",
      "\u001b[0;31mReadTimeoutError\u001b[0m                          Traceback (most recent call last)",
      "\u001b[0;32m~/anaconda3/lib/python3.8/site-packages/urllib3/connectionpool.py\u001b[0m in \u001b[0;36murlopen\u001b[0;34m(self, method, url, body, headers, retries, redirect, assert_same_host, timeout, pool_timeout, release_conn, chunked, body_pos, **response_kw)\u001b[0m\n\u001b[1;32m    669\u001b[0m             \u001b[0;31m# Make the request on the httplib connection object.\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0;32m--> 670\u001b[0;31m             httplib_response = self._make_request(\n\u001b[0m\u001b[1;32m    671\u001b[0m                 \u001b[0mconn\u001b[0m\u001b[0;34m,\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n",
      "\u001b[0;32m~/anaconda3/lib/python3.8/site-packages/urllib3/connectionpool.py\u001b[0m in \u001b[0;36m_make_request\u001b[0;34m(self, conn, method, url, timeout, chunked, **httplib_request_kw)\u001b[0m\n\u001b[1;32m    427\u001b[0m         \u001b[0;32mexcept\u001b[0m \u001b[0;34m(\u001b[0m\u001b[0mSocketTimeout\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0mBaseSSLError\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0mSocketError\u001b[0m\u001b[0;34m)\u001b[0m \u001b[0;32mas\u001b[0m \u001b[0me\u001b[0m\u001b[0;34m:\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0;32m--> 428\u001b[0;31m             \u001b[0mself\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0m_raise_timeout\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0merr\u001b[0m\u001b[0;34m=\u001b[0m\u001b[0me\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0murl\u001b[0m\u001b[0;34m=\u001b[0m\u001b[0murl\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0mtimeout_value\u001b[0m\u001b[0;34m=\u001b[0m\u001b[0mread_timeout\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0m\u001b[1;32m    429\u001b[0m             \u001b[0;32mraise\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n",
      "\u001b[0;32m~/anaconda3/lib/python3.8/site-packages/urllib3/connectionpool.py\u001b[0m in \u001b[0;36m_raise_timeout\u001b[0;34m(self, err, url, timeout_value)\u001b[0m\n\u001b[1;32m    334\u001b[0m         \u001b[0;32mif\u001b[0m \u001b[0misinstance\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0merr\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0mSocketTimeout\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m:\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0;32m--> 335\u001b[0;31m             raise ReadTimeoutError(\n\u001b[0m\u001b[1;32m    336\u001b[0m                 \u001b[0mself\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0murl\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0;34m\"Read timed out. (read timeout=%s)\"\u001b[0m \u001b[0;34m%\u001b[0m \u001b[0mtimeout_value\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n",
      "\u001b[0;31mReadTimeoutError\u001b[0m: HTTPConnectionPool(host='edd.ifa.hawaii.edu', port=80): Read timed out. (read timeout=5)",
      "\nDuring handling of the above exception, another exception occurred:\n",
      "\u001b[0;31mMaxRetryError\u001b[0m                             Traceback (most recent call last)",
      "\u001b[0;32m~/anaconda3/lib/python3.8/site-packages/requests/adapters.py\u001b[0m in \u001b[0;36msend\u001b[0;34m(self, request, stream, timeout, verify, cert, proxies)\u001b[0m\n\u001b[1;32m    438\u001b[0m             \u001b[0;32mif\u001b[0m \u001b[0;32mnot\u001b[0m \u001b[0mchunked\u001b[0m\u001b[0;34m:\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0;32m--> 439\u001b[0;31m                 resp = conn.urlopen(\n\u001b[0m\u001b[1;32m    440\u001b[0m                     \u001b[0mmethod\u001b[0m\u001b[0;34m=\u001b[0m\u001b[0mrequest\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mmethod\u001b[0m\u001b[0;34m,\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n",
      "\u001b[0;32m~/anaconda3/lib/python3.8/site-packages/urllib3/connectionpool.py\u001b[0m in \u001b[0;36murlopen\u001b[0;34m(self, method, url, body, headers, retries, redirect, assert_same_host, timeout, pool_timeout, release_conn, chunked, body_pos, **response_kw)\u001b[0m\n\u001b[1;32m    753\u001b[0m             )\n\u001b[0;32m--> 754\u001b[0;31m             return self.urlopen(\n\u001b[0m\u001b[1;32m    755\u001b[0m                 \u001b[0mmethod\u001b[0m\u001b[0;34m,\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n",
      "\u001b[0;32m~/anaconda3/lib/python3.8/site-packages/urllib3/connectionpool.py\u001b[0m in \u001b[0;36murlopen\u001b[0;34m(self, method, url, body, headers, retries, redirect, assert_same_host, timeout, pool_timeout, release_conn, chunked, body_pos, **response_kw)\u001b[0m\n\u001b[1;32m    753\u001b[0m             )\n\u001b[0;32m--> 754\u001b[0;31m             return self.urlopen(\n\u001b[0m\u001b[1;32m    755\u001b[0m                 \u001b[0mmethod\u001b[0m\u001b[0;34m,\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n",
      "\u001b[0;32m~/anaconda3/lib/python3.8/site-packages/urllib3/connectionpool.py\u001b[0m in \u001b[0;36murlopen\u001b[0;34m(self, method, url, body, headers, retries, redirect, assert_same_host, timeout, pool_timeout, release_conn, chunked, body_pos, **response_kw)\u001b[0m\n\u001b[1;32m    725\u001b[0m \u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0;32m--> 726\u001b[0;31m             retries = retries.increment(\n\u001b[0m\u001b[1;32m    727\u001b[0m                 \u001b[0mmethod\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0murl\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0merror\u001b[0m\u001b[0;34m=\u001b[0m\u001b[0me\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0m_pool\u001b[0m\u001b[0;34m=\u001b[0m\u001b[0mself\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0m_stacktrace\u001b[0m\u001b[0;34m=\u001b[0m\u001b[0msys\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mexc_info\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m[\u001b[0m\u001b[0;36m2\u001b[0m\u001b[0;34m]\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n",
      "\u001b[0;32m~/anaconda3/lib/python3.8/site-packages/urllib3/util/retry.py\u001b[0m in \u001b[0;36mincrement\u001b[0;34m(self, method, url, response, error, _pool, _stacktrace)\u001b[0m\n\u001b[1;32m    445\u001b[0m         \u001b[0;32mif\u001b[0m \u001b[0mnew_retry\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mis_exhausted\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m:\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0;32m--> 446\u001b[0;31m             \u001b[0;32mraise\u001b[0m \u001b[0mMaxRetryError\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0m_pool\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0murl\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0merror\u001b[0m \u001b[0;32mor\u001b[0m \u001b[0mResponseError\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mcause\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0m\u001b[1;32m    447\u001b[0m \u001b[0;34m\u001b[0m\u001b[0m\n",
      "\u001b[0;31mMaxRetryError\u001b[0m: HTTPConnectionPool(host='edd.ifa.hawaii.edu', port=80): Max retries exceeded with url: /CF3calculator/api.php (Caused by ReadTimeoutError(\"HTTPConnectionPool(host='edd.ifa.hawaii.edu', port=80): Read timed out. (read timeout=5)\"))",
      "\nDuring handling of the above exception, another exception occurred:\n",
      "\u001b[0;31mConnectionError\u001b[0m                           Traceback (most recent call last)",
      "\u001b[0;32m<ipython-input-30-a5a25eb08020>\u001b[0m in \u001b[0;36m<module>\u001b[0;34m\u001b[0m\n\u001b[1;32m      1\u001b[0m \u001b[0;31m# no more than 5 seconds between every request\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0;32m----> 2\u001b[0;31m \u001b[0mcf3\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mcalculate_velocity\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mdistance\u001b[0m\u001b[0;34m=\u001b[0m\u001b[0;36m180\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0mra\u001b[0m\u001b[0;34m=\u001b[0m\u001b[0;36m187\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0mdec\u001b[0m\u001b[0;34m=\u001b[0m\u001b[0;36m13.5\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0mtimeout\u001b[0m\u001b[0;34m=\u001b[0m\u001b[0;36m5\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0m",
      "\u001b[0;32m/media/Data/Home/PanStarrs/Jan/HI/augment/test_TFRcatal/pycf3/pycf3.py\u001b[0m in \u001b[0;36mcalculate_velocity\u001b[0;34m(self, distance, ra, dec, glon, glat, sgl, sgb, **get_kwargs)\u001b[0m\n\u001b[1;32m    902\u001b[0m             \u001b[0mra\u001b[0m\u001b[0;34m=\u001b[0m\u001b[0mra\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0mdec\u001b[0m\u001b[0;34m=\u001b[0m\u001b[0mdec\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0mglon\u001b[0m\u001b[0;34m=\u001b[0m\u001b[0mglon\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0mglat\u001b[0m\u001b[0;34m=\u001b[0m\u001b[0mglat\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0msgl\u001b[0m\u001b[0;34m=\u001b[0m\u001b[0msgl\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0msgb\u001b[0m\u001b[0;34m=\u001b[0m\u001b[0msgb\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m    903\u001b[0m         )\n\u001b[0;32m--> 904\u001b[0;31m         response = self._search(\n\u001b[0m\u001b[1;32m    905\u001b[0m             \u001b[0mcoordinate_system\u001b[0m\u001b[0;34m=\u001b[0m\u001b[0mcoordinate_system\u001b[0m\u001b[0;34m,\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m    906\u001b[0m             \u001b[0malpha\u001b[0m\u001b[0;34m=\u001b[0m\u001b[0malpha\u001b[0m\u001b[0;34m,\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n",
      "\u001b[0;32m/media/Data/Home/PanStarrs/Jan/HI/augment/test_TFRcatal/pycf3/pycf3.py\u001b[0m in \u001b[0;36m_search\u001b[0;34m(self, coordinate_system, alpha, delta, distance, velocity, **get_kwargs)\u001b[0m\n\u001b[1;32m    727\u001b[0m             \u001b[0mresponse\u001b[0m \u001b[0;34m=\u001b[0m \u001b[0mcache\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mget\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mkey\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0mdefault\u001b[0m\u001b[0;34m=\u001b[0m\u001b[0mdcache\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mcore\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mENOVAL\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0mretry\u001b[0m\u001b[0;34m=\u001b[0m\u001b[0;32mTrue\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m    728\u001b[0m             \u001b[0;32mif\u001b[0m \u001b[0mresponse\u001b[0m \u001b[0;34m==\u001b[0m \u001b[0mdcache\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mcore\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mENOVAL\u001b[0m\u001b[0;34m:\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0;32m--> 729\u001b[0;31m                 response = self.session.get(\n\u001b[0m\u001b[1;32m    730\u001b[0m                     \u001b[0mself\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mURL\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0mjson\u001b[0m\u001b[0;34m=\u001b[0m\u001b[0mpayload\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0;34m**\u001b[0m\u001b[0mget_kwargs\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m    731\u001b[0m                 )\n",
      "\u001b[0;32m~/anaconda3/lib/python3.8/site-packages/requests/sessions.py\u001b[0m in \u001b[0;36mget\u001b[0;34m(self, url, **kwargs)\u001b[0m\n\u001b[1;32m    541\u001b[0m \u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m    542\u001b[0m         \u001b[0mkwargs\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0msetdefault\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0;34m'allow_redirects'\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0;32mTrue\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0;32m--> 543\u001b[0;31m         \u001b[0;32mreturn\u001b[0m \u001b[0mself\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mrequest\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0;34m'GET'\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0murl\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0;34m**\u001b[0m\u001b[0mkwargs\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0m\u001b[1;32m    544\u001b[0m \u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m    545\u001b[0m     \u001b[0;32mdef\u001b[0m \u001b[0moptions\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mself\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0murl\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0;34m**\u001b[0m\u001b[0mkwargs\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m:\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n",
      "\u001b[0;32m~/anaconda3/lib/python3.8/site-packages/requests/sessions.py\u001b[0m in \u001b[0;36mrequest\u001b[0;34m(self, method, url, params, data, headers, cookies, files, auth, timeout, allow_redirects, proxies, hooks, stream, verify, cert, json)\u001b[0m\n\u001b[1;32m    528\u001b[0m         }\n\u001b[1;32m    529\u001b[0m         \u001b[0msend_kwargs\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mupdate\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0msettings\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0;32m--> 530\u001b[0;31m         \u001b[0mresp\u001b[0m \u001b[0;34m=\u001b[0m \u001b[0mself\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0msend\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mprep\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0;34m**\u001b[0m\u001b[0msend_kwargs\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0m\u001b[1;32m    531\u001b[0m \u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m    532\u001b[0m         \u001b[0;32mreturn\u001b[0m \u001b[0mresp\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n",
      "\u001b[0;32m~/anaconda3/lib/python3.8/site-packages/requests/sessions.py\u001b[0m in \u001b[0;36msend\u001b[0;34m(self, request, **kwargs)\u001b[0m\n\u001b[1;32m    641\u001b[0m \u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m    642\u001b[0m         \u001b[0;31m# Send the request\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0;32m--> 643\u001b[0;31m         \u001b[0mr\u001b[0m \u001b[0;34m=\u001b[0m \u001b[0madapter\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0msend\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mrequest\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0;34m**\u001b[0m\u001b[0mkwargs\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0m\u001b[1;32m    644\u001b[0m \u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m    645\u001b[0m         \u001b[0;31m# Total elapsed time of the request (approximately)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n",
      "\u001b[0;32m~/anaconda3/lib/python3.8/site-packages/requests/adapters.py\u001b[0m in \u001b[0;36msend\u001b[0;34m(self, request, stream, timeout, verify, cert, proxies)\u001b[0m\n\u001b[1;32m    514\u001b[0m                 \u001b[0;32mraise\u001b[0m \u001b[0mSSLError\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0me\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0mrequest\u001b[0m\u001b[0;34m=\u001b[0m\u001b[0mrequest\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m    515\u001b[0m \u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0;32m--> 516\u001b[0;31m             \u001b[0;32mraise\u001b[0m \u001b[0mConnectionError\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0me\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0mrequest\u001b[0m\u001b[0;34m=\u001b[0m\u001b[0mrequest\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0m\u001b[1;32m    517\u001b[0m \u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m    518\u001b[0m         \u001b[0;32mexcept\u001b[0m \u001b[0mClosedPoolError\u001b[0m \u001b[0;32mas\u001b[0m \u001b[0me\u001b[0m\u001b[0;34m:\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n",
      "\u001b[0;31mConnectionError\u001b[0m: HTTPConnectionPool(host='edd.ifa.hawaii.edu', port=80): Max retries exceeded with url: /CF3calculator/api.php (Caused by ReadTimeoutError(\"HTTPConnectionPool(host='edd.ifa.hawaii.edu', port=80): Read timed out. (read timeout=5)\"))"
     ]
    }
   ],
   "source": [
    "# no more than 5 seconds between every request\n",
    "cf3.calculate_velocity(distance=180, ra=187, dec=13.5, timeout=5)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "metadata": {},
   "outputs": [],
   "source": []
  }
 ],
 "metadata": {
  "celltoolbar": "Edit Metadata",
  "kernelspec": {
   "display_name": "Python 3",
   "language": "python",
   "name": "python3"
  },
  "language_info": {
   "codemirror_mode": {
    "name": "ipython",
    "version": 3
   },
   "file_extension": ".py",
   "mimetype": "text/x-python",
   "name": "python",
   "nbconvert_exporter": "python",
   "pygments_lexer": "ipython3",
   "version": "3.8.5"
  }
 },
 "nbformat": 4,
 "nbformat_minor": 4
}
